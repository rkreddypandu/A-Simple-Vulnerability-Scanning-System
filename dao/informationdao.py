from .basedao import BaseDAO
from logger.syslogger import logger



class InsertportDAO(BaseDAO):
    #写入查询的端口信息
    def insertports(self,ip,port,protocol,status,service):
        # ip, port, protocol, status, service
        try:
            super().getConnection()
            sqlinsertport = "insert into t_port (ip,port,protocol,status,service) values (%s,%s,%s,%s,%s)"
            params = (ip,port,protocol,status,service)
            result = super().execute(sqlinsertport, params)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e) )
        finally:
            super().close()


class InserthostDAO(BaseDAO):
    #写入查询的主机信息
    def inserthosts(self,system,accuracy,Host):
        # system,accuracy
        try:
            super().getConnection()
            sqlinserthost = "insert into t_host (system,accuracy,ip) values (%s,%s,%s)"
            params = (system,accuracy,Host)
            result = super().execute(sqlinserthost, params)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e) )
        finally:
            super().close()


class InsertpathDAO(BaseDAO):
    #写入查询的路径信息
    def insertpaths(self,ip,domainname,path,state):
        # system,accuracy
        try:
            super().getConnection()
            sqlinsertpath = "insert into t_path (ip,domainname,path,state) values (%s,%s,%s,%s)"
            params = (ip,domainname,path,state)
            result = super().execute(sqlinsertpath, params)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e) )
        finally:
            super().close()


class InsertipDAO(BaseDAO):
    #写入要查询的ip信息
    def insertips(self,ip,domianname):
        # ip,domianname
        try:
            super().getConnection()
            sqlinsertip = "insert into t_ip (ip,domain_name) values (%s,%s)"
            params = (ip,domianname)
            result = super().execute(sqlinsertip, params)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e) )
        finally:
            super().close()



class InsertpassweakDAO(BaseDAO):
    #写入mysql弱口令信息
    def insertmysqlweak(self,idpass,host,weaktype,weakuser,weakpwd):
        # idpass,weaktype,weakuser,weakpwd
        try:
            super().getConnection()
            sqlinsertip = "insert into t_weakpass (idpass,ip,weaktype,weakuser,weakpass) values (%s,%s,%s,%s,%s)"
            params = (idpass,host,weaktype,weakuser,weakpwd)
            result = super().execute(sqlinsertip, params)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e) )
        finally:
            super().close()

    # 写入ssh弱口令信息
    def insertsshweak(self,idpass,host,weaktype,weakuser,weakpwd):
        # idpass,weaktype,weakuser,weakpwd
        try:
            super().getConnection()
            sqlinsertip = "insert into t_weakpass (idpass,ip,weaktype,weakuser,weakpass) values (%s,%s,%s,%s,%s)"
            params = (idpass,host,weaktype,weakuser,weakpwd)
            result = super().execute(sqlinsertip, params)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e) )
        finally:
            super().close()



class InsertvulDAO(BaseDAO):
    #写入有sql注入漏洞的相关信息
    def insertsqlvul(self,ip,URL,sqltype):
        # URL,sqltype
        try:
            super().getConnection()
            sqlinsersqlvul = "insert into t_vul (ip,url,vultype,typeid,danger) values (%s,%s,%s,%s,%s)"
            params = (ip,URL,sqltype,1,'highrisk')
            result = super().execute(sqlinsersqlvul, params)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e) )
        finally:
            super().close()

    # 写入有xss漏洞的相关信息
    def insertxssvul(self, ip, URL, vultype):
        # URL,sqltype
        try:
            super().getConnection()
            sqlinsersqlvul = "insert into t_vul (ip,url,vultype,typeid,danger) values (%s,%s,%s,%s,%s)"
            params = (ip, URL, vultype, 2,'moderaterisk')
            result = super().execute(sqlinsersqlvul, params)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e))
        finally:
            super().close()

    # 写入有priesc漏洞的相关信息
    def insertpriescvul(self, ip,pritype):
        # URL,sqltype
        try:
            super().getConnection()
            sqlinsersqlvul = "insert into t_vul (ip,vultype,vulid) values (%s,%s,%s)"
            params = (ip,pritype,3)
            result = super().execute(sqlinsersqlvul, params)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e))
        finally:
            super().close()

    # 写入漏洞数量统计信息
    def insertvultotal(self, ip, danger):
        try:
            super().getConnection()
            sqlinsersqlvul = "update t_total set %s=%s + 1 where ip=%s"%(danger,danger,ip)
            result = super().execute(sqlinsersqlvul)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e))
        finally:
            super().close()


class SelectinfoDAO(BaseDAO):
    # 查询主机的信息
    def gethost(self,hostlist):
        try:
            super().getConnection()
            sqlSelect = "select * from t_host where ip = %s "
            params = (hostlist)
            result = super().fetchall(sqlSelect,params)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e) )
        finally:
            super().close()

    # 查询端口的信息
    def getport(self,portlist):
        try:
            super().getConnection()
            sqlSelect = "select * from t_port where ip = %s"
            params = (portlist)
            result = super().fetchall(sqlSelect,params)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e) )
        finally:
            super().close()

    #查询开启3306端口的信息
    def getmysqlport(self):
        try:
            super().getConnection()
            sqlSelect = "select * from t_port where port = '3306'"
            result = super().fetchall(sqlSelect)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e) )
        finally:
            super().close()

    # 查询开启22端口的信息
    def getsshport(self):
        try:
            super().getConnection()
            sqlSelect = "select * from t_port where port = '22'"
            result = super().fetchall(sqlSelect)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e) )
        finally:
            super().close()

    # 查询路径的信息
    def getpath(self,pathlist):
        try:
            super().getConnection()
            sqlSelect = "select * from t_path where ip = %s"
            params = (pathlist)
            result = super().fetchall(sqlSelect,params)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e) )
        finally:
            super().close()

    # 查询ip的信息
    def getip(self,tbname,type):
        try:
            print(type)
            if type == 0:
                super().getConnection()
                sqlSelect = "select * from t_ip where ip in (select distinct ip from %s)"%tbname
                # params = (table)
                result = super().fetchall(sqlSelect)
                super().commit()
                return result
            else:
                super().getConnection()
                sqlSelect = "select * from t_ip where ip in (select distinct ip from %s where typeid=%s)"%(tbname,type)
                result = super().fetchall(sqlSelect)
                super().commit()
                return result

        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e))
        finally:
            super().close()

    # 查询mysql弱口令信息的信息
    def getmysqlpass(self,idpass):
        try:
            super().getConnection()
            sqlSelect = "select * from t_weakpass where typeid = %s"
            params = (idpass)
            result = super().fetchall(sqlSelect,params)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e) )
        finally:
            super().close()

    # 查询ssh弱口令信息的信息
    def getsshpass(self,idpass):
        try:
            super().getConnection()
            sqlSelect = "select * from t_weakpass where typeid = %s"
            params = (idpass)
            result = super().fetchall(sqlSelect,params)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e) )
        finally:
            super().close()

    # 查询sql漏洞信息
    def getsqlvul(self,sqllist):
        try:
            super().getConnection()
            sqlSelect = "select * from t_vul where ip = %s and typeid = '1'"
            params = (sqllist)
            result = super().fetchall(sqlSelect,params)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e) )
        finally:
            super().close()

    # 查询xss漏洞信息
    def getxssvul(self,xsslist):
        try:
            super().getConnection()
            sqlSelect = "select * from t_vul where ip = %s and typeid = '2'"
            params = (xsslist)
            result = super().fetchall(sqlSelect,params)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e) )
        finally:
            super().close()

    # 查询priesc漏洞信息
    def getpriescvul(self, prilist):
        try:
            super().getConnection()
            sqlSelect = "select * from t_vul where ip = %s and typeid = '3'"
            params = (prilist)
            result = super().fetchall(sqlSelect, params)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e))
        finally:
            super().close()

    # 查询漏洞统计信息
    def getvulinfo(self,vullist):
        try:
            super().getConnection()
            vulSelect = "select * from t_vultotal where ip = %s"
            params = (vullist)
            result = super().fetchone(vulSelect, params)
            print(result)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e) )
        finally:
            super().close()

    # 查网站漏洞详细信息
    def getvuldeinfo(self,vullist):
        try:
            super().getConnection()
            vulSelect = "select * from t_vul where ip = %s"
            params = (vullist)
            result = super().fetchall(vulSelect, params)
            print(result)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e) )
        finally:
            super().close()

    # 查网站是否是已存在该漏洞
    def getvulexistinfo(self, vullist):
        try:
            super().getConnection()
            vulSelect = "select url from t_vul where ip = %s"
            params = (vullist)
            result = super().fetchall(vulSelect, params)
            print(result)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e))
        finally:
            super().close()

    # 查网站是否是已存在该漏洞
    def getpassexistinfo(self, vullist):
        try:
            super().getConnection()
            vulSelect = "select weaktype from t_weakpass where ip = %s"
            params = (vullist)
            result = super().fetchall(vulSelect, params)
            print(result)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e))
        finally:
            super().close()


    # 查网站是否是已存在收集过的信息
    def getnmapinfo(self, vullist):
        try:
            super().getConnection()
            vulSelect = "select domain_name from t_ip where ip = %s"
            params = (vullist)
            result = super().fetchall(vulSelect, params)
            print(result)
            super().commit()
            return result
        except Exception as e:
            logger.error("执行SQL：" + sqlSelect + " 出现异常，params:" + str(e))
        finally:
            super().close()