import nmap

from dao.informationdao import InsertportDAO
from dao.informationdao import InserthostDAO
from dao.informationdao import InsertpathDAO
from dao.informationdao import InsertipDAO
from dao.informationdao import SelectinfoDAO
from .ipdomain import iptodomain

import requests
import threading
import os


insertportDAO = InsertportDAO()
inserthostDAO = InserthostDAO()
insertpathDAO = InsertpathDAO()
insertipDAO = InsertipDAO()
selectip = SelectinfoDAO()


def nmap_A_scan(network_prefix):
    nm = nmap.PortScanner()
    # 配置nmap扫描参数
    print(network_prefix)
    scan_raw_result = nm.scan(hosts=network_prefix, arguments='-v -n -Pn')
    # 分析扫描结果
    ip = iptodomain(network_prefix)
    insertipDAO.insertips(ip, network_prefix)
    for host, result in scan_raw_result['scan'].items():
        if result['status']['state'] == 'up':
            print(host)
            idno = 1
            try:
                for port in result['tcp']:
                    try:
                        idno += 1
                        print('TCP端口号：' + str(port))
                        try:
                            print('状态：' + result['tcp'][port]['state'])
                            state = result['tcp'][port]['state']
                        except:
                            pass
                        try:
                            print('名字：' + result['tcp'][port]['name'])
                            servicename = result['tcp'][port]['name']
                        except:
                            pass
                        tcp = 'tcp'
                        insertportDAO.insertports(host,port,tcp,state,servicename)
                    except:
                        pass
            except:
                pass


def nmap_B_scan(network_prefix):
    nm = nmap.PortScanner()
    # 配置nmap扫描参数
    scan_raw_result = nm.scan(hosts=network_prefix, arguments='-O -Pn')
    # 分析扫描结果
    for host, result in scan_raw_result['scan'].items():
        if result['status']['state'] == 'up':
            print('#' * 17 + 'Host:' + host + '#' * 17)
            print('-' * 20 + '操作系统猜测' + '-' * 20)
            for os in result['osmatch']:
                print('操作系统为：' + os['name'] + ' ' * 3 + '准确度为：' + os['accuracy'])
                inserthostDAO.inserthosts(os['name'],os['accuracy'],host)


class Mythread(threading.Thread):
    def __init__(self,ip,diclist,domain_name):
        super(Mythread, self).__init__()
        self.ip = ip
        self.diclist = diclist
        self.domain_name = domain_name
    def run(self):
        # insertipDAO.insertips(self.ip,self.domain_name)
        path_scan(self.ip,self.diclist, self.domain_name)


def path_scan(ip,diclist,domain_name):
    diclist = os.path.join(os.getcwd(), 'controller/dic/'+diclist)
    with open(diclist) as file_object:
        lines = file_object.readlines()
    for line in lines:
        pi_string = line.rstrip()
        print(pi_string)
        r = requests.get(domain_name + pi_string)
        if str(r.status_code)[0] == '2' or str(r.status_code)[0] =='3':
            insertpathDAO.insertpaths(ip,domain_name,pi_string,str(r.status_code))




