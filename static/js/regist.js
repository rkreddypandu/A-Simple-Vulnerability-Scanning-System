 // function reg_submit(){
 //            userName = document.regForm.userName.value
 //            userPwd  = document.regForm.userPwd.value
 //            reUserPwd  = document.regForm.reUserPwd.value
 //
 //
 //            reg = /^[a-zA-Z\_][1-9a-zA-Z\_]{5,17}$/
 //            regPwd = /^\w{6,18}$/
 //            if(!reg.test(userName)){
 //                userMsg = document.getElementById("userMsg")
 //                userMsg.innerHTML = "用户名必须是由数字字母下划线组成"
 //                return false
 //            }
 //
 //            if(userPwd != reUserPwd || !regPwd.test(userPwd)){
 //                msg = document.getElementById("pwdMsg")
 //                msg.innerHTML = "密码不能为空, 为6到18位，两次密码都不能为空"
 //                return false
 //            }
 //            return true
 //        }

        // 1.异步的javascript 和 XML
        // 2.有别于传统的http，所有的请求都要刷新整个或frame内部，当有了ajax技术之后，可以进行局部刷新
function ajax_submit(){
    var userName = document.regForm.username.value;
    // if(userName == "")
    //     return;
    // //第一步：创建XMLHttpRequest对象
    var xmlHttpRequest;  //
    try{
        xmlHttpRequest = new XMLHttpRequest(); // 用js向服务器端发送http请求
    }catch(e){
        xmlHttpRequest = new ActiveXObject();
    }
    //调用回调函数，回调函数是个匿名的
    xmlHttpRequest.onreadystatechange = function (){
        // alert('第一个'+xmlHttpRequest.status)
        // alert('第二个'+xmlHttpRequest.readyState)
        if(xmlHttpRequest.readyState==4 && xmlHttpRequest.status==200){
            // alert("----here-----")
            var result = xmlHttpRequest.responseText;
            // alert(result)
            if(result=="1"){
                document.getElementById("userMsg").innerHTML = "该名字已被注册";
                document.getElementById("userMsg").style="color:red;";
            }else{
                document.getElementById("userMsg").innerHTML = "该名字可以注册";
                document.getElementById("userMsg").style="color:green;";
            }
        }
    }
    //post方法
    xmlHttpRequest.open("POST","verify",true);
    //设置一个请求头
    xmlHttpRequest.setRequestHeader("content-type", "application/x-www-form-urlencoded");
    //调用send方法
    xmlHttpRequest.send("userName="+userName);

}